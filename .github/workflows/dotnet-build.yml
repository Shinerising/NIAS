name: .NET Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [ Release ]

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: NIAS.sln
      Archive_Name: '../NIAS_Preview.zip'
      Project_Path: 'LanMonitor/LanMonitor.csproj'

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
        
    - name: Restore Packages
      run: dotnet restore $env:Solution_Name
    
    # Build Project
    - name: Build Project
      run: dotnet publish LanMonitor\LanMonitor.csproj /p:Configuration=Release /p:PublishProfile=LanMonitor\Properties\PublishProfiles\PublishProfile_x64.pubxml -o "../_build"
              
    # Sign Binaries
    - name: Sign Binaries
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: '${{ secrets.Base64_Encoded_PFX }}'
        cert-password: '${{ secrets.PFX_KEY }}'
        cert-sha1: '${{ secrets.PFX_SHA1 }}'
        cert-description: 'foo'
        folder: '../_build'
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: "zip"
        path: "../_build/*"
        recursive_exclusions: "*.pdb"
        filename: ${{ env.Archive_Name }}

    - name: Generate Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: ${{ env.Archive_Name }}
