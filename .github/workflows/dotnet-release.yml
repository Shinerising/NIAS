name: .NET Release

on:
  push:
    tags:
      - "v*"

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: NIAS.sln
      Archive_Name: '../NIAS-${{github.ref_name}}.zip'
      Project_Path: 'LanMonitor/LanMonitor.csproj'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the .NET
    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
        
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./ReportTemplate/package-lock.json
        
    - name: Restore Packages
      run: dotnet restore $env:Solution_Name
    
    # Build Project
    - name: Build Project
      run: dotnet publish LanMonitor\LanMonitor.csproj /p:Configuration=Release /p:PublishProfile=LanMonitor\Properties\PublishProfiles\PublishProfile_x64.pubxml -o "../_build"

    - name: Build Template
      working-directory: ./ReportTemplate
      run: |
        npm ci
        npm run build
        mv dist/index.html ../../_build/template.html
    
    # Sign Binaries
    - name: Sign Binaries
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: '${{ secrets.Base64_Encoded_PFX }}'
        cert-password: '${{ secrets.PFX_KEY }}'
        cert-sha1: '${{ secrets.PFX_SHA1 }}'
        folder: '../_build'
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: "zip"
        path: "../_build/*"
        exclusions: "*.pdb"
        filename: ${{ env.Archive_Name }}
        
    - name: Generate Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: ${{ env.Archive_Name }}
