# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a WPF or Windows Forms desktop application
# built on .NET Core.
# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework
#
# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.
#
# 2. Signing
# Generate a signing certificate in the Windows Application
# Packaging Project or add an existing signing certificate to the project.
# Next, use PowerShell to encode the .pfx file using Base64 encoding
# by running the following Powershell script to generate the output string:
#
# $pfx_cert = Get-Content '.\SigningCertificate.pfx' -Encoding Byte
# [System.Convert]::ToBase64String($pfx_cert) | Out-File 'SigningCertificate_Encoded.txt'
#
# Open the output file, SigningCertificate_Encoded.txt, and copy the
# string inside. Then, add the string to the repo as a GitHub secret
# and name it "Base64_Encoded_Pfx."
# For more information on how to configure your signing certificate for
# this workflow, refer to https://github.com/microsoft/github-actions-for-desktop-apps#signing
#
# Finally, add the signing certificate password to the repo as a secret and name it "Pfx_Key".
# See "Build the Windows Application Packaging project" below to see how the secret is used.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: .NET Release

on:
  push:
    tags:
      - "v*"

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-2019  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: NIAS.sln
      Archive_Name: '../NIAS-${{github.ref_name}}.zip'
      Project_Path: 'LanMonitor/LanMonitor.csproj'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the .NET
    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: ./ReportTemplate/package-lock.json
        
    - name: Restore Packages
      run: dotnet restore $env:Solution_Name
    
    # Build Project
    - name: Build Project
      run: dotnet publish LanMonitor\LanMonitor.csproj /p:Configuration=Release /p:PublishProfile=LanMonitor\Properties\PublishProfiles\PublishProfile_x64.pubxml -o "../_build"

    - name: Build Template
      working-directory: ./ReportTemplate
      run: |
        npm ci
        npm run build
        mv dist/index.html ../../_build/template.html
    
    # Sign Binaries
    - name: Sign Binaries
      uses: GabrielAcostaEngler/signtool-code-sign@main
      with:
        certificate: '${{ secrets.Base64_Encoded_PFX }}'
        cert-password: '${{ secrets.PFX_KEY }}'
        cert-sha1: '${{ secrets.PFX_SHA1 }}'
        folder: '../_build'
        recursive: false
        timestamp-server: 'http://timestamp.digicert.com'
        
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: "zip"
        path: "../_build/*"
        exclusions: "*.pdb"
        filename: ${{ env.Archive_Name }}
        
    - name: Generate Release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: ${{ env.Archive_Name }}
